apiVersion: v1
kind: Service
metadata:
  name: {{ template "emulatorjs.fullname" . }}-tcp
  labels:
    app: {{ template "emulatorjs.name" . }}
    chart: {{ template "emulatorjs.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- if .Values.service.annotations }}
  annotations:
{{ toYaml .Values.service.annotations | indent 4 }}
{{- end }}
spec:
  type: {{ .Values.service.type }}
  {{- if .Values.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.service.loadBalancerIP }}
  {{- end }}
  {{- if or (eq .Values.service.type "NodePort") (eq .Values.service.type "LoadBalancer") }}
  externalTrafficPolicy: {{ .Values.service.externalTrafficPolicy }}
  {{- end }}
  ports:
    - name: management
      port: {{ .Values.service.managementUI.port }}
      targetPort: management-tcp
      {{- if and (.Values.service.managementUI.nodePort) (eq .Values.service.type "NodePort") }}
      nodePort: {{ .Values.service.managementUI.nodePort }}
      {{- end }}
      protocol: TCP
    - name: public
      port: {{ .Values.service.publicUI.port }}
      targetPort: public-tcp
      {{- if and (.Values.service.publicUI.nodePort) (eq .Values.service.type "NodePort") }}
      nodePort: {{ .Values.service.publicUI.nodePort }}
      {{- end }}
      protocol: TCP
    {{- if .Values.service.ipfsPeering.port }}
    - name: ipfs
      port: {{ .Values.service.ipfsPeering.port }}
      targetPort: ipfs-tcp
      {{- if and (.Values.service.ipfsPeering.nodePort) (eq .Values.service.type "NodePort") }}
      nodePort: {{ .Values.service.ipfsPeering.nodePort }}
      {{- end }}
      protocol: TCP
    {{ end }}
  selector:
    app: {{ template "emulatorjs.name" . }}
    release: {{ .Release.Name }}
