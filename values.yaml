# -- The number of replicas
replicaCount: 1

# -- The `spec.strategyTpye` for updates
strategyType: RollingUpdate

# -- The maximum number of Pods that can be created over the desired number of `ReplicaSet` during updating.
maxSurge: 1

# -- The maximum number of Pods that can be unavailable during updating
maxUnavailable: 1

image:
  # -- the repostory to pull the image from
  repository: linuxserver/emulatorjs
  # -- the docker tag, if left empty it will get it from the chart's appVersion
  tag: latest
  # -- the pull policy
  pullPolicy: IfNotPresent

env:
  managementUIPort: 3000
  publicUIPort: 80
  ipfsPeeringPort: 4001
  puid: 1000
  pgid: 1000
  tz: "Europe/London"
  subfolder: "/"

service:
  managementUI:
    port: 3000
    nodePort: 
  publicUI:
    port: 80
    nodePort: 
  ipfsPeering:
    port: 4001
    nodePort: 

  # -- `spec.type` for the Service
  type: NodePort
  
  # -- `spec.externalTrafficPolicy` for the service
  externalTrafficPolicy: Local

  # -- A fixed `spec.loadBalancerIP` for the service
  loadBalancerIP: ""

  # -- Annotations for the service
  annotations: {}
    # metallb.universe.tf/address-pool: network-services
    # metallb.universe.tf/allow-shared-ip: emulatorjs-svc

virtualHost: emulatorjs

# -- Configuration for the Ingress
ingress:
  # -- Generate a Ingress resource
  enabled: false

  # -- Specify an ingressClassName
  # ingressClassName: nginx

  # -- Annotations for the ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    # virtualHost (default value is emulatorjs) will be appended to the hosts
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #     #- virtualHost (default value is emulatorjs) will be appended to the hosts
  #      - chart-example.local

# -- Probes configuration
probes:
  # -- probes.liveness -- Configure the healthcheck for the ingress controller
  liveness:
    # -- Generate a liveness probe
    enabled: true
    initialDelaySeconds: 60
    failureThreshold: 10
    timeoutSeconds: 5
  readiness:
    # -- Generate a readiness probe
    enabled: true
    initialDelaySeconds: 60
    failureThreshold: 3
    timeoutSeconds: 5


antiaff:
  # -- set to true to enable antiaffinity (example: 2 emulatorjs in the same cluster)
  enabled: false
  # -- Here you can set the emulatorjs release (you set in `helm install <releasename> ...`)
  # you want to avoid
  avoidRelease: emulatorjs1
  # -- Here you can choose between preferred or required
  strict: true

# -- hostname of pod
hostname: ""

# -- should the container use host network
hostNetwork: "false"

customVolumes:
  # -- set this to true to enable custom volumes
  enabled: false
  # -- any volume type can be used here
  config: {}
    # hostPath:
    #   path: "/mnt/data"

# -- `spec.PersitentVolumeClaim` configuration
persistentVolumeClaims:
  config:
    # -- set to true to use pvc
    enabled: false

    # -- specify an existing `PersistentVolumeClaim` to use
    # existingClaim: ""

    # -- Annotations for the `PersitentVolumeClaim`
    annotations: {}

    accessModes:
      - ReadWriteOnce

    size: "500Mi"

    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

    ## If subPath is set mount a sub folder of a volume instead of the root of the volume.
    ## This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs).

    ## subPath: "emulatorjs"
  
  data:
    # -- set to true to use pvc
    enabled: false

    # -- specify an existing `PersistentVolumeClaim` to use
    # existingClaim: ""

    # -- Annotations for the `PersitentVolumeClaim`
    annotations: {}

    accessModes:
      - ReadWriteOnce

    size: "500Mi"

    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

    ## If subPath is set mount a sub folder of a volume instead of the root of the volume.
    ## This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs).

    ## subPath: "emulatorjs"

# -- Additional annotations for pods
podAnnotations: {}
  # prometheus.io/port: '9617'
  # prometheus.io/scrape: 'true'

podDnsConfig:
  enabled: true
  policy: "None"
  nameservers:
  - 127.0.0.1
  - 1.1.1.1
